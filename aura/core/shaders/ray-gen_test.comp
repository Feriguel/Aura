#version 460

// Workspace settings.
layout ( local_size_x = 8, local_size_y = 8, local_size_z = 1 ) in;
//							0.123456789012345
#define PRECISION			0.0000001
#define PI					3.1415927
// Output image.
layout(rgba8, set = 0, binding = 1) uniform writeonly image2D directions;
// Ray launcher.
layout(std140, set = 0, binding = 0) uniform RayLauncher {
	vec3 origin;
	vec3 top_left_corner;
	vec3 horizontal;
	vec3 vertical;
	vec3 u;
	vec3 v;
	vec3 w;
	float lens_radius;
};
// Randomizer.
layout(push_constant) uniform Randomizer {
	float[3] random;
};
// Generates a ray for each workspace position. The work space should be the
// output image dimensions.
void main ()
{
	const uint s = gl_GlobalInvocationID.s;
	const uint t = gl_GlobalInvocationID.t;
	const uint pos = s * t + s;
	const vec3 offset = u * lens_radius * random[0] + v * lens_radius * random[1];
	const vec3 direction = normalize(
		top_left_corner - origin - offset + s * horizontal + t * vertical);
	imageStore(directions, ivec2(s,t), vec4(direction, 1.0f));
}
